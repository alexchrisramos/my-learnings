CKA exam distribution

Cluster Architecture, Installation & Configuration	25%
Workloads & Scheduling	15%
Services & Networking	20%
Storage	10%
Troubleshooting	30%


Nodes
  Control plain / Master Node
  Worker Nodes

  Control plain / Master Nodes components
    etcd - cluster info datastore
    scheduler - logic for which node a pod is created
    control manager - (node controller, Replication controller) make sure that desired state is achieved
    api server - rest api server for all components - orchestrating all components

  Worker Nodes
    kubelet - recieves the command from scheduler to perform the action (create node, destroy, status, etc)
    kubeproxy - worker nodes networking

etcd
  a key value store
  etcdctl cli
  default port 2379
  installed manually  
    will install as a service (etcd.service) on the node - /usr/local/bin/etcd
    multiple master node will have multiple etcd
      make sure etcd is aware of each other on the etcd.service
      --initial-cluster controller-0=https://${CONTROLLER0_IP}:2380,controller-1=https://${CONTROLLER1_IP}:2380 //
  installed via kubeadm
    creates a pod for etcd
    on kube-system namespace
    run etcdctl on the pod
      kubectl exec <podname> -n <namespace> -- sh -c "ETCDCTL_API=3 etcdctl get / --prefix --keys-only --limit=10 --cacert /etc/kubernetes/pki/etcd/ca.crt --cert /etc/kubernetes/pki/etcd/server.crt  --key /etc/kubernetes/pki/etcd/server.key" 

API-Server
  Authenticate user > Validate request > retrieve data from etcd > Update ETCD > Scheduler > kubelet
  API server processes request from kubectl or RestAPI calls
  Authorizations are via certificates

  Where is the API server? Where to see the API server options?
    if installed via Kubeadm
      creates a pod on kube-system namespace on the master node
      file definition is at etc/kubernetes/manifests/kube-apiserver.yaml
    if installed manually
      on the master node
      service definition is at etc/systemd/system/kube-apiserver.service
      also see running process - ps -aux | grep kube-apiserver

Kube-controller manager
  Manages various controllers
  Controller is a process - continiously watches the status and remediate issues
    Node Controller
      checks Nodes status every 5 seconds with 40 seconds grace period before it marks as unreachable
      once marked as unreachable, the node is given 5 minutes to come back up (POD eviction timeout), else it removes the pods
    Replication-Controller
      takes care of the replicaset

  Where is the controller?
    All controllers are packaged in Kube-Controller-Manager
      Kubeadm installation
        Creates a POD kube-controller-manager in the kube-system namespace on the master node
        definition is on /etc/kubernetes/manifests/kube-controller-manager.yaml
      Manual installation
        /etc/systemd/system/kube-controller-manager.service
        ps -aux | grep kube-controller-manager

Kube-scheduler
    Decides which pod goes to which node
  
kubelet
  installed on the worker nodes
  Registers a node, Create PODS, Monitor node and Pods

  How it is installed
    Using Kubeadm
      kubelet is not automatically installed
      must be manually installed
      ps -aux | grep kubelet  on the worker node
    Manual installation
      same as above

kube-proxy
  a process that runs on each nodes
  looks for new kube services, then creates appropriate rules on each node to route traffic
  creates an IP tables rule

  How it is installed
    Kubeadm
      creates a pod on kube-system
      it is deployed as a daemonset

PODS




YAML configuration file
  Required fields in the structure
    apiVersion
    kind
    metadata   (in the form of dictionary)
    spec
        

